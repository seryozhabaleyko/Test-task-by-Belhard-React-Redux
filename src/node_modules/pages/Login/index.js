import React, { useState, useEffect } from 'react';
import { connect } from 'react-redux';
import { Redirect } from 'react-router';

import userLoginFetch from 'redux/actions/login';

function Login({ userLoginFetch, currentUser, error, isFetching }) {

    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');

    const handleSubmit = (event) => {
        event.preventDefault();
        userLoginFetch({ username, password });
    };

    const isInvalid = username === '' || password === '';

    if (currentUser) {
        console.log('currentUser1', currentUser);
        return <Redirect to="/profile" />
    }

    return (
        <main className="main">
            <div className="container">
                <div className="auth">
                    <h1>Авторизация</h1>
                    <p>Введите логин и пароль</p>
                    <form onSubmit={handleSubmit}>
                        <div>
                            <input
                                type="text"
                                id="username"
                                placeholder="username"
                                value={username}
                                onChange={(e) => setUsername(e.target.value)}
                            />
                        </div>
                        <div>
                            <input
                                type="password"
                                id="password"
                                placeholder="password"
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                            />
                        </div>
                        <button
                            type="submit"
                            disabled={isInvalid}
                        >
                            {isFetching ? 'Загрузка...' : 'Войти'}
                        </button>
                    </form>
                    {error && (<p className="alert">{error}</p>)}
                </div>
            </div>
        </main>
    );
}

const mapStateToProps = (state) => ({
    currentUser: state.login.currentUser,
    error: state.login.error,
    isFetching: state.login.isFetching,
});

const mapDispatchToProps = dispatch => ({
    userLoginFetch: (userInfo) => dispatch(userLoginFetch(userInfo)),
});

export default connect(mapStateToProps, mapDispatchToProps)(Login);