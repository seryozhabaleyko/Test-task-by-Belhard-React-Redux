import types from 'redux/constants/types/auth';

const fetchLogin = ({ username, password }) => new Promise((resolve, reject) => {
    if (!(username === 'admin')) {
        reject({
            massege: 'Неверный логин',
        });
    }

    if (!(password === '12345')) {
        reject({
            massege: 'Неверный пароль',
        });
    }

    resolve({
        username,
        password,
        avatar: 'https://robohash.org/imanewuser.png',
        bio: 'A new user to the app.',
        token: 'qweqweqweqweqweqweqweqweqweqweqweqweqweqwe',
    });
});

const userLoginFetch = (userInfo) => async (dispatch) => {
    dispatch({
        type: types.request,
    });

    try {
        const user = await fetchLogin(userInfo);

        localStorage.setItem('token', user.token);

        dispatch({
            type: types.success,
            payload: user,
        });
    } catch (error) {
        dispatch({
            type: types.failure,
            payload: error,
            error: true,
        });
    }
};

export default userLoginFetch;