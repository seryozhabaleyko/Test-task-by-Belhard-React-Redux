{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","node_modules/redux/actions/auth.js","node_modules/pages/Login/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","fetchLogin","username","password","Promise","resolve","reject","massege","avatar","bio","token","userLoginFetch","userInfo","dispatch","a","type","types","request","user","localStorage","setItem","success","payload","failure","error","connect","state","currentUser","auth","isFetching","useState","setUsername","setPassword","isInvalid","to","className","onSubmit","event","preventDefault","id","placeholder","onChange","e","target","disabled","style","color"],"mappings":"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","file":"static/js/3.b4ae7006.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import types from 'redux/constants/types/auth';\r\n\r\nconst fetchLogin = ({ username, password }) => new Promise((resolve, reject) => {\r\n    if (!(username === 'admin')) {\r\n        reject({\r\n            massege: 'Имя пользователя или пароль введены не верно. Такого пользователя не существует.',\r\n        });\r\n    }\r\n\r\n    if (!(password === '12345')) {\r\n        reject({\r\n            massege: 'Имя пользователя или пароль введены не верно. Пароль введен не верно.',\r\n        });\r\n    }\r\n\r\n    resolve({\r\n        username,\r\n        password,\r\n        avatar: 'https://robohash.org/imanewuser.png',\r\n        bio: 'A new user to the app.',\r\n        token: 'qweqweqweqweqweqweqweqweqweqweqweqweqweqwe',\r\n    });\r\n});\r\n\r\nconst userLoginFetch = (userInfo) => async (dispatch) => {\r\n    dispatch({\r\n        type: types.request,\r\n    });\r\n\r\n    try {\r\n        const user = await fetchLogin(userInfo);\r\n\r\n        localStorage.setItem('token', user.token);\r\n\r\n        dispatch({\r\n            type: types.success,\r\n            payload: user,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.failure,\r\n            payload: error,\r\n            error: true,\r\n        });\r\n    }\r\n};\r\n\r\nexport default userLoginFetch;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport userLoginFetch from 'redux/actions/auth';\r\n\r\nimport './login.scss';\r\n\r\nfunction Login({ userLoginFetch, currentUser, error, isFetching }) {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        userLoginFetch({ username, password });\r\n    };\r\n\r\n    const isInvalid = username === '' || password === '';\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"container\">\r\n                <div className=\"auth\">\r\n                    <h1>Авторизация</h1>\r\n                    <p>Это бесплатно - и всегда так будет.</p>\r\n                    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                        <div className=\"field field-group\">\r\n                            <input\r\n                                className=\"control\"\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                placeholder=\"Имя пользователя\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field field-group\">\r\n                            <input\r\n                                className=\"control\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Пароль\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            className=\"button button-primary\"\r\n                            type=\"submit\"\r\n                            disabled={isInvalid}\r\n                        >\r\n                            {isFetching ? 'Загрузка...' : 'Войти'}\r\n                        </button>\r\n                    </form>\r\n                    {error && (<p className=\"alert\" style={{ color: '#f44336' }}>{error}</p>)}\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentUser: state.auth.currentUser,\r\n    error: state.auth.error,\r\n    isFetching: state.auth.isFetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    userLoginFetch: (userInfo) => dispatch(userLoginFetch(userInfo)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"],"sourceRoot":""}